#!/bin/bash

# Quick start script - runs everything in sequence
set -e

echo "üöÄ AI Stack Quick Start"
echo "======================="

# Colors
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

# --- Step 1 ---
echo -e "${GREEN}Step 1: Setting up project structure...${NC}"
chmod +x install.sh
./install.sh

# --- Step 2 ---
echo -e "\n${GREEN}Step 2: Starting Docker services...${NC}"
docker-compose up -d

# --- Step 3 ---
echo -e "\n${GREEN}Step 3: Waiting for services to be ready...${NC}"
echo "This may take 2-3 minutes for first run..."

# Wait for services to be healthy (initial wait)
sleep 30

# Function to wait for a service's health endpoint
wait_for_service() {
    local service_name=$1
    local url=$2
    local attempts=20
    
    echo "Checking service health: $service_name"
    for i in $(seq 1 $attempts); do
        if curl -s $url > /dev/null 2>&1; then
            echo "‚úÖ $service_name is ready"
            return 0
        fi
        echo "‚è≥ Waiting for $service_name..."
        sleep 5
    done
    echo "‚ùå $service_name failed to start."
    return 1
}

wait_for_service "Backend" "http://localhost:3001/health"
wait_for_service "n8n" "http://localhost:5678"
wait_for_service "Ollama" "http://localhost:11434/api/tags"

# --- Step 3b (NEW) ---
echo -e "\n${GREEN}Step 3b: Uploading and activating n8n workflow...${NC}"

N8N_URL="http://localhost:5678/api/v1/workflows"
N8N_AUTH="-u admin:ChangeMe!"
WORKFLOW_FILE="./n8n/workflows/chat-workflow.json"

# 1. Upload the workflow
echo -e "${BLUE}Uploading workflow...${NC}"
UPLOAD_RESPONSE=$(curl -s -w "%{http_code}" -X POST "$N8N_URL" $N8N_AUTH \
    -H "Content-Type: application/json" \
    -d @"$WORKFLOW_FILE")

HTTP_CODE="${UPLOAD_RESPONSE:(-3)}"
RESPONSE_BODY="${UPLOAD_RESPONSE:0:$((${#UPLOAD_RESPONSE}-3))}"

if [ "$HTTP_CODE" -eq 201 ]; then
    WORKFLOW_ID=$(echo "$RESPONSE_BODY" | grep -o '"id":"[^"]*"' | head -1 | cut -d: -f2 | tr -d '"')
    echo "‚úÖ Workflow uploaded with ID: $WORKFLOW_ID"

    # 2. Activate the workflow
    echo -e "${BLUE}Activating workflow...${NC}"
    ACTIVATE_RESPONSE=$(curl -s -w "%{http_code}" -X PUT "$N8N_URL/$WORKFLOW_ID/activate" $N8N_AUTH)
    ACTIVATE_HTTP_CODE="${ACTIVATE_RESPONSE:(-3)}"
    
    if [ "$ACTIVATE_HTTP_CODE" -eq 200 ]; then
        echo "‚úÖ Workflow activated successfully!"
    else
        echo -e "${YELLOW}‚ö†Ô∏è Failed to activate workflow. HTTP Code: $ACTIVATE_HTTP_CODE. Skipping activation.${NC}"
    fi

elif [ "$HTTP_CODE" -eq 409 ]; then
    echo -e "${YELLOW}‚ö†Ô∏è Workflow already exists (HTTP 409). Skipping upload/activation.${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è Failed to upload workflow. HTTP Code: $HTTP_CODE. Skipping activation. Response: $RESPONSE_BODY ${NC}"
fi

# --- Step 4 ---
echo -e "\n${GREEN}Step 4: Setting up AI models...${NC}"
./scripts/setup-ollama.sh

# --- Completion ---
echo -e "\n${GREEN}üéâ Setup Complete!${NC}"
echo -e "\nYour AI stack is now running at:"
echo -e "‚Ä¢ Frontend: ${YELLOW}http://localhost:3000${NC}"
echo -e "‚Ä¢ n8n: ${YELLOW}http://localhost:5678${NC} (User: admin, Pass: ChangeMe!)" # <--- Added credentials
echo -e "‚Ä¢ Backend API: ${YELLOW}http://localhost:3001${NC}"
echo -e "‚Ä¢ Ollama API: ${YELLOW}http://localhost:11434${NC}"

echo -e "\n${GREEN}Next steps:${NC}"
echo "1. Open http://localhost:3000 to use the chat interface"
echo "2. Visit http://localhost:5678 to configure n8n workflows"
echo "3. Check the README.md for more configuration options"

echo -e "\nTo stop all services: ${YELLOW}docker-compose down${NC}"
echo -e "To view logs: ${YELLOW}docker-compose logs -f${NC}"